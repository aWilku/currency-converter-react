{"version":3,"sources":["Header/index.js","currencies.js","Form/index.js","Container/index.js","Result/index.js","Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","currencies","name","shortcut","rate","Form","calculateResult","useState","amount","setAmount","currency","setCurrency","onSubmit","event","preventDefault","value","onChange","target","type","min","max","step","placeholder","autoFocus","required","map","Container","children","Result","result","undefined","givenAmount","toFixed","finalAmount","Clock","formatDate","date","toLocaleDateString","weekday","day","month","year","hour","minute","second","Date","setDate","useEffect","intervalId","setInterval","clearInterval","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58803c81.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","const currencies = [\r\n    {\r\n        name: \"Euro\",\r\n        shortcut: \"EUR\",\r\n        rate: 4.56,\r\n    },\r\n    {\r\n        name: \"Frank szwajcarski\",\r\n        shortcut: \"CHF\",\r\n        rate: 4.19,\r\n    },\r\n    {\r\n        name: \"Dolar amerykański\",\r\n        shortcut: \"USD\",\r\n        rate: 3.84,\r\n    },\r\n    {\r\n        name: \"Funt brytyjski\",\r\n        shortcut: \"GBP\",\r\n        rate: 5.32,\r\n    },\r\n];\r\n\r\nexport { currencies };","import \"./style.css\"\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"../currencies.js\"\r\n\r\nconst Form = ({ calculateResult }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].shortcut)\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(amount, currency);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Kwota w PLN:\r\n                        </span>\r\n                        <input\r\n                            className=\"form__field\"\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            min=\"0.01\"\r\n                            max=\"999999999\"\r\n                            step=\"0.01\"\r\n                            placeholder=\"Wpisz kwotę\"\r\n                            autoFocus\r\n                            required />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Waluta:\r\n                        </span>\r\n                        <select\r\n                            className=\"form__field\"\r\n                            name=\"requestedCurrency\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                            required\r\n                        >\r\n                            {currencies.map(currency => (\r\n                                <option\r\n                                    key={currency.shortcut}\r\n                                    value={currency.shortcut}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            ))};\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n            </fieldset>\r\n            <p>\r\n                <button className=\"form__button\">Przelicz</button>\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import \"./style.css\"\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import \"./style.css\"\r\n\r\nconst Result = ({ result }) => (\r\n    <p className=\"container__result\">\r\n        {result !== undefined && (\r\n            <>\r\n                <strong>\r\n                    {result.givenAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\r\n                    {result.finalAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import { useState, useEffect } from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Clock = () => {\r\n    const formatDate = (date) => {\r\n        return date.toLocaleDateString(undefined, {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            second: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const [date, setDate] = useState(formatDate(new Date()));\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(formatDate(new Date()));\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <p className=\"clock\">\r\n            Dziaj jest {date}\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Clock;","import Header from \"./Header\";\r\nimport Form from \"./Form\";\r\nimport Container from \"./Container\";\r\nimport Result from \"./Result\";\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"./currencies\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n  \r\n  const calculateResult = (amount, currency) => {\r\n    const rate = currencies.find(({ shortcut }) => shortcut === currency).rate;\r\n\r\n    setResult({\r\n      givenAmount: +amount,\r\n      finalAmount: amount / rate,\r\n      currency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header\r\n        title=\"Wolf Kalkulator\"\r\n      />\r\n      <Clock />\r\n      <Form\r\n        calculateResult={calculateResult}\r\n      />\r\n      <Result\r\n        result={result}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}